# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-12-06 11:00+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: config.py:39
msgid ""
"Determines whether or not to\n"
"    replace letters in the output of spellit."
msgstr ""

#: config.py:42
msgid ""
"Determines whether or not\n"
"    to replace punctuation in the output of spellit."
msgstr ""

#: config.py:45
msgid ""
"Determines whether or not to\n"
"    replace numbers in the output of spellit."
msgstr ""

#: config.py:49
msgid ""
"Determines the minimum number of a letters\n"
"    in a word before it will be shrunken by the shrink command/filter."
msgstr ""

#: plugin.py:55
#, docstring
msgid ""
"This plugin offers several commands which transform text in some way.\n"
"    It also provides the capability of using such commands to 'filter' the\n"
"    output of the bot -- for instance, you could make everything the bot says\n"
"    be in leetspeak, or Morse code, or any number of other kinds of filters.\n"
"    Not very useful, but definitely quite fun :)"
msgstr ""

#: plugin.py:90
#, docstring
msgid ""
"[<channel>] [<command>]\n"
"\n"
"        Sets the outFilter of this plugin to be <command>.  If no command is\n"
"        given, unsets the outFilter.  <channel> is only necessary if the\n"
"        message isn't sent in the channel itself.\n"
"        "
msgstr ""

#: plugin.py:103
msgid "That's not a valid filter command."
msgstr ""

#: plugin.py:114
#, docstring
msgid ""
"<text>\n"
"\n"
"        Removes all the vowels from <text>.  (If you're curious why this is\n"
"        named 'hebrew' it's because I (jemfinch) thought of it in Hebrew class,\n"
"        and printed Hebrew often elides the vowels.)\n"
"        "
msgstr ""

#: plugin.py:128
#, docstring
msgid ""
"<text>\n"
"\n"
"        Removes all the spaces from <text>.\n"
"        "
msgstr ""

#: plugin.py:137
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text>, with all consecutive duplicated letters removed.\n"
"        "
msgstr ""

#: plugin.py:150
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the binary representation of <text>.\n"
"        "
msgstr ""

#: plugin.py:184
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the character representation of binary <text>.\n"
"        Assumes ASCII, 8 digits per character.\n"
"        "
msgstr ""

#: plugin.py:199
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns a hexstring from the given string; a hexstring is a string\n"
"        composed of the hexadecimal value of each character in the string\n"
"        "
msgstr ""

#: plugin.py:210
#, docstring
msgid ""
"<hexstring>\n"
"\n"
"        Returns the string corresponding to <hexstring>.  Obviously,\n"
"        <hexstring> must be a string of hexadecimal digits.\n"
"        "
msgstr ""

#: plugin.py:219
msgid "Invalid input."
msgstr ""

#: plugin.py:225
#, docstring
msgid ""
"<text>\n"
"\n"
"        Rotates <text> 13 characters to the right in the alphabet.  Rot13 is\n"
"        commonly used for text that simply needs to be hidden from inadvertent\n"
"        reading by roaming eyes, since it's easily reversible.\n"
"        "
msgstr ""

#: plugin.py:246
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the l33tspeak version of <text>\n"
"        "
msgstr ""

#: plugin.py:266
#, docstring
msgid ""
"<text>\n"
"\n"
"        Replies with an especially k-rad translation of <text>.\n"
"        "
msgstr ""

#: plugin.py:282
#, docstring
msgid ""
"<text>\n"
"\n"
"        Replies with a string where each word is scrambled; i.e., each internal\n"
"        letter (that is, all letters but the first and last) are shuffled.\n"
"        "
msgstr ""

#: plugin.py:347
#, docstring
msgid ""
"<Morse code text>\n"
"\n"
"        Does the reverse of the morse command.\n"
"        "
msgstr ""

#: plugin.py:364
#, docstring
msgid ""
"<text>\n"
"\n"
"        Gives the Morse code equivalent of a given string.\n"
"        "
msgstr ""

#: plugin.py:376
#, docstring
msgid ""
"<text>\n"
"\n"
"        Reverses <text>.\n"
"        "
msgstr ""

#: plugin.py:394
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> with each character randomly colorized.\n"
"        "
msgstr ""

#: plugin.py:409
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> colorized like a rainbow.\n"
"        "
msgstr ""

#: plugin.py:426
#, docstring
msgid ""
"<text>\n"
"\n"
"        Strips bold, underline, and colors from <text>."
msgstr ""

#: plugin.py:433
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> stripped of all color codes.\n"
"        "
msgstr ""

#: plugin.py:442
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> as if an AOL user had said it.\n"
"        "
msgstr ""

#: plugin.py:469
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> as if JeffK had said it himself.\n"
"        "
msgstr ""

#: plugin.py:565
msgid "ay"
msgstr ""

#: plugin.py:565
msgid "bee"
msgstr ""

#: plugin.py:565
msgid "dee"
msgstr ""

#: plugin.py:565
msgid "see"
msgstr ""

#: plugin.py:566
msgid "aych"
msgstr ""

#: plugin.py:566
msgid "ee"
msgstr ""

#: plugin.py:566
msgid "eff"
msgstr ""

#: plugin.py:566
msgid "gee"
msgstr ""

#: plugin.py:567
msgid "ell"
msgstr ""

#: plugin.py:567
msgid "eye"
msgstr ""

#: plugin.py:567
msgid "jay"
msgstr ""

#: plugin.py:567
msgid "kay"
msgstr ""

#: plugin.py:568
msgid "cue"
msgstr ""

#: plugin.py:568
msgid "em"
msgstr ""

#: plugin.py:568
msgid "en"
msgstr ""

#: plugin.py:568
msgid "oh"
msgstr ""

#: plugin.py:568
msgid "pee"
msgstr ""

#: plugin.py:569
msgid "arr"
msgstr ""

#: plugin.py:569
msgid "ess"
msgstr ""

#: plugin.py:569
msgid "tee"
msgstr ""

#: plugin.py:569
msgid "you"
msgstr ""

#: plugin.py:570
msgid "double-you"
msgstr ""

#: plugin.py:570
msgid "ecks"
msgstr ""

#: plugin.py:570
msgid "vee"
msgstr ""

#: plugin.py:570
msgid "why"
msgstr ""

#: plugin.py:571
msgid "zee"
msgstr ""

#: plugin.py:576
msgid "exclamation point"
msgstr ""

#: plugin.py:577
msgid "quote"
msgstr ""

#: plugin.py:578
msgid "pound"
msgstr ""

#: plugin.py:579
msgid "dollar sign"
msgstr ""

#: plugin.py:580
msgid "percent"
msgstr ""

#: plugin.py:581
msgid "ampersand"
msgstr ""

#: plugin.py:582
msgid "single quote"
msgstr ""

#: plugin.py:583
msgid "left paren"
msgstr ""

#: plugin.py:584
msgid "right paren"
msgstr ""

#: plugin.py:585
msgid "asterisk"
msgstr ""

#: plugin.py:586
msgid "plus"
msgstr ""

#: plugin.py:587
msgid "comma"
msgstr ""

#: plugin.py:588
msgid "minus"
msgstr ""

#: plugin.py:589
msgid "period"
msgstr ""

#: plugin.py:590
msgid "slash"
msgstr ""

#: plugin.py:591
msgid "colon"
msgstr ""

#: plugin.py:592
msgid "semicolon"
msgstr ""

#: plugin.py:593
msgid "less than"
msgstr ""

#: plugin.py:594
msgid "equals"
msgstr ""

#: plugin.py:595
msgid "greater than"
msgstr ""

#: plugin.py:596
msgid "question mark"
msgstr ""

#: plugin.py:597
msgid "at"
msgstr ""

#: plugin.py:598
msgid "left bracket"
msgstr ""

#: plugin.py:599
msgid "backslash"
msgstr ""

#: plugin.py:600
msgid "right bracket"
msgstr ""

#: plugin.py:601
msgid "caret"
msgstr ""

#: plugin.py:602
msgid "underscore"
msgstr ""

#: plugin.py:603
msgid "backtick"
msgstr ""

#: plugin.py:604
msgid "left brace"
msgstr ""

#: plugin.py:605
msgid "pipe"
msgstr ""

#: plugin.py:606
msgid "right brace"
msgstr ""

#: plugin.py:607
msgid "tilde"
msgstr ""

#: plugin.py:610
msgid "one"
msgstr ""

#: plugin.py:610
msgid "three"
msgstr ""

#: plugin.py:610
msgid "two"
msgstr ""

#: plugin.py:610
msgid "zero"
msgstr ""

#: plugin.py:611
msgid "five"
msgstr ""

#: plugin.py:611
msgid "four"
msgstr ""

#: plugin.py:611
msgid "seven"
msgstr ""

#: plugin.py:611
msgid "six"
msgstr ""

#: plugin.py:612
msgid "eight"
msgstr ""

#: plugin.py:612
msgid "nine"
msgstr ""

#: plugin.py:616
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text>, phonetically spelled out.\n"
"        "
msgstr ""

#: plugin.py:646
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> as GNU/RMS would say it.\n"
"        "
msgstr ""

#: plugin.py:655
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> with each word longer than\n"
"        supybot.plugins.Filter.shrink.minimum being shrunken (i.e., like\n"
"        \"internationalization\" becomes \"i18n\").\n"
"        "
msgstr ""

#: plugin.py:714
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> rotated 180 degrees. Only really works for ASCII\n"
"        printable characters.\n"
"        "
msgstr ""

#: plugin.py:740
#, docstring
msgid ""
"<text>\n"
"\n"
"        Capitalises the first letter of each word.\n"
"        "
msgstr ""

#: plugin.py:749
#, docstring
msgid ""
"<text>\n"
"\n"
"        EVERYONE LOVES CAPS LOCK.\n"
"        "
msgstr ""

#: plugin.py:758
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> with vowels rotated\n"
"        "
msgstr ""

#: plugin.py:769
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns <text> in uwu-speak.\n"
"        "
msgstr ""

