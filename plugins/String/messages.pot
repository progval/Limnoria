# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-12-06 11:00+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: config.py:48
msgid ""
"Determines the maximum size of a string\n"
"    given to the levenshtein command.  The levenshtein command uses an O(m*n)\n"
"    algorithm, which means that with strings of length 256, it can take 1.5\n"
"    seconds to finish; with strings of length 384, though, it can take 4\n"
"    seconds to finish, and with strings of much larger lengths, it takes more\n"
"    and more time.  Using nested commands, strings can get quite large, hence\n"
"    this variable, to limit the size of arguments passed to the levenshtein\n"
"    command."
msgstr ""

#: config.py:59
msgid ""
"Determines the maximum time, in seconds, that\n"
"    a regular expression is given to execute before being terminated. Since\n"
"    there is a possibility that user input for the re command can cause it to\n"
"    eat up large amounts of ram or cpu time, it's a good idea to keep this \n"
"    low. Most normal regexps should not take very long at all."
msgstr ""

#: plugin.py:53
#, docstring
msgid "Provides useful commands for manipulating characters and strings."
msgstr ""

#: plugin.py:55
#, docstring
msgid ""
"<string>\n"
"\n"
"        Returns the unicode codepoint of characters in <string>.\n"
"        "
msgstr ""

#: plugin.py:63
#, docstring
msgid ""
"<number>\n"
"\n"
"        Returns the unicode character associated with codepoint <number>\n"
"        "
msgstr ""

#: plugin.py:70
msgid "That number doesn't map to a unicode character."
msgstr ""

#: plugin.py:74
#, docstring
msgid ""
"<string>\n"
"\n"
"        Returns the name of characters in <string>.\n"
"        This will error if any character is not a valid Unicode character."
msgstr ""

#: plugin.py:83
msgid "No name found for character %r at position %d."
msgstr ""

#: plugin.py:89
#, docstring
msgid ""
"<name>\n"
"\n"
"        Searches for a unicode character from its <name>."
msgstr ""

#: plugin.py:95
msgid "No character found with this name."
msgstr ""

#: plugin.py:99
#, docstring
msgid ""
"<encoding> <text>\n"
"\n"
"        Returns an encoded form of the given text; the valid encodings are\n"
"        available in the documentation of the Python codecs module:\n"
"        <http://docs.python.org/library/codecs.html#standard-encodings>.\n"
"        "
msgstr ""

#: plugin.py:115 plugin.py:154
msgid "encoding"
msgstr ""

#: plugin.py:136
#, docstring
msgid ""
"<encoding> <text>\n"
"\n"
"        Returns an un-encoded form of the given text; the valid encodings are\n"
"        available in the documentation of the Python codecs module:\n"
"        <http://docs.python.org/library/codecs.html#standard-encodings>.\n"
"        "
msgstr ""

#: plugin.py:160
msgid "base64 string"
msgstr ""

#: plugin.py:161
msgid "Base64 strings must be a multiple of 4 in length, padded with '=' if necessary."
msgstr ""

#: plugin.py:179
#, docstring
msgid ""
"<string1> <string2>\n"
"\n"
"        Returns the levenshtein distance (also known as the \"edit distance\"\n"
"        between <string1> and <string2>)\n"
"        "
msgstr ""

#: plugin.py:186
msgid "Levenshtein distance is a complicated algorithm, try it with some smaller inputs."
msgstr ""

#: plugin.py:193
#, docstring
msgid ""
"<string> [<length>]\n"
"\n"
"        Returns the Soundex hash to a given length.  The length defaults to\n"
"        4, since that's the standard length for a soundex hash.  For unlimited\n"
"        length, use 0. Maximum length 1024.\n"
"        "
msgstr ""

#: plugin.py:206
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the length of <text>.\n"
"        "
msgstr ""

#: plugin.py:214
#, docstring
msgid ""
"<regexp> <text>\n"
"\n"
"        If <regexp> is of the form m/regexp/flags, returns the portion of\n"
"        <text> that matches the regexp.  If <regexp> is of the form\n"
"        s/regexp/replacement/flags, returns the result of applying such a\n"
"        regexp to <text>.\n"
"        "
msgstr ""

#: plugin.py:223
msgid "You probably don't want to match the empty string."
msgstr ""

#: plugin.py:240
#, docstring
msgid ""
"<password> <text>\n"
"\n"
"        Returns <text> XOR-encrypted with <password>.\n"
"        "
msgstr ""

#: plugin.py:250
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the md5 hash of a given string.\n"
"        "
msgstr ""

#: plugin.py:258
#, docstring
msgid ""
"<text>\n"
"\n"
"        Returns the SHA1 hash of a given string.\n"
"        "
msgstr ""

